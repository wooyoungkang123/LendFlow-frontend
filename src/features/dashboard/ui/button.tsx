import React from "react"; interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> { variant?: "primary" | "secondary" | "outline" | "ghost" | "link"; size?: "sm" | "md" | "lg"; } export const Button = React.forwardRef<HTMLButtonElement, ButtonProps>( ({ className = "", variant = "primary", size = "md", children, disabled, ...props }, ref) => { const baseStyles = "inline-flex items-center justify-center rounded-md font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none"; const variants = { primary: "bg-blue-600 text-white hover:bg-blue-700 focus-visible:ring-blue-500", secondary: "bg-gray-200 text-gray-900 hover:bg-gray-300 focus-visible:ring-gray-500", outline: "border border-gray-300 bg-transparent hover:bg-gray-100 focus-visible:ring-gray-500", ghost: "bg-transparent hover:bg-gray-100 focus-visible:ring-gray-500", link: "bg-transparent underline-offset-4 hover:underline text-blue-600 hover:text-blue-700 focus-visible:ring-blue-500 p-0", }; const sizes = { sm: "h-8 px-3 text-xs", md: "h-10 py-2 px-4 text-sm", lg: "h-12 px-6 text-base", }; return ( <button className={`${baseStyles} ${variants[variant]} ${sizes[size]} ${className}`} ref={ref} disabled={disabled} {...props} > {children} </button> ); } ); Button.displayName = "Button";
